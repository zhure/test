{"version":3,"file":"js/940.6241361c.js","mappings":"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","sources":["webpack://stray-animal-rescue-system/./src/views/Im.vue","webpack://stray-animal-rescue-system/./src/views/Im.vue?9ed7"],"sourcesContent":["<template>\r\n  <div style=\"padding: 10px; margin-bottom: 50px\">\r\n    <el-row>\r\n      <el-col :span=\"2\" :offset=\"2\">\r\n        <el-card style=\"width: 300px; height: 300px; color: #333\">\r\n          <div style=\"padding-bottom: 10px; border-bottom: 1px solid #ccc\">在线用户<span style=\"font-size: 12px\">（点击聊天气泡开始聊天）</span></div>\r\n          <div style=\"padding: 10px 0\" v-for=\"user in users\" :key=\"user.username\">\r\n            <div>\r\n              <span>{{ user.username }}</span>\r\n              <el-icon class=\"el-icon-chat-dot-round\" style=\"margin-left: 10px; font-size: 16px; cursor: pointer\"\r\n                       @click=\"chatUser = user.username\"><chat-dot-round /></el-icon>\r\n              <span style=\"font-size: 12px;color: limegreen; margin-left: 5px\" v-if=\"user.username === chatUser\">chatting...</span>\r\n            </div>\r\n          </div>\r\n        </el-card>\r\n      </el-col>\r\n\r\n      <el-col :span=\"20\">\r\n        <div style=\"width: 800px; margin: 0 auto; background-color: white;\r\n                    border-radius: 5px; box-shadow: 0 0 10px #ccc\">\r\n          <div style=\"text-align: center; line-height: 50px;\">\r\n            医疗咨询室（{{ chatUser }}）\r\n          </div>\r\n          <div style=\"height: 350px; overflow:auto; border-top: 1px solid #ccc\" v-html=\"content\"></div>\r\n          <div>\r\n<!--            <textarea v-model=\"text\" style=\"height: 160px; width: 100%; padding: 20px; border: none; border-top: 1px solid #ccc;-->\r\n<!--             border-bottom: 1px solid #ccc; outline: none\"></textarea>-->\r\n            <div style=\"width: 100%; padding: 10px; border: none; border-top: 1px solid #ccc;\r\n             border-bottom: 1px solid #ccc; outline: none\">\r\n              <div id=\"toolbar-container\" style=\"z-index: 101\"></div>\r\n              <div id=\"editor-container\" style=\"z-index: 100; min-height: 300px\"></div>\r\n            </div>\r\n            <div style=\"text-align: right; padding-right: 10px\">\r\n              <el-button type=\"primary\" size=\"mini\" @click=\"send\">发送</el-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport request from \"@/utils/request\";\r\nimport '@wangeditor/editor/dist/css/style.css'\r\nimport { createEditor, createToolbar } from \"@wangeditor/editor\";\r\n\r\nlet editor = null;\r\nlet toolbar;\r\nlet socket;\r\n\r\nexport default {\r\n  name: \"Im\",\r\n  data() {\r\n    return {\r\n      circleUrl: 'https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png',\r\n      vet: {},\r\n      isCollapse: false,\r\n      users: [],\r\n      chatUser: '',\r\n      text: \"\",\r\n      messages: [],\r\n      content: '',\r\n      vets: [],\r\n      editorConfig: {\r\n        placeholder: '请输入内容',\r\n        MENU_CONF: {\r\n          uploadImage: {\r\n            server:'http://120.79.190.143:9090/files/editor/upload',\r\n            fieldName: 'file',\r\n            base64LimitSize: 5 * 1024,}\r\n        }\r\n      },\r\n    }\r\n  },\r\n  created() {\r\n    this.init()\r\n    this.getVets()\r\n  },\r\n  mounted() {\r\n    editor = createEditor({\r\n      selector: '#editor-container',\r\n      config: this.editorConfig,\r\n      mode: 'simple'\r\n    })\r\n    toolbar = createToolbar({\r\n      editor,\r\n      selector:'#toolbar-container',\r\n      mode: 'simple'\r\n    })\r\n  },\r\n  beforeUnmount() {\r\n    if(editor == null) return\r\n    editor.destroy()\r\n  },\r\n  methods: {\r\n    getVets() {\r\n      request.get('/vet/show').then(res => {\r\n        this.vets = res.data\r\n      })\r\n      // let index\r\n      for (let vet of this.vets) {\r\n        this.users.filter(user => user.user !== vet.nickName)\r\n        // index = this.users.findIndex(item => {\r\n        //   if(item.username === vet.nickName) {\r\n        //     return true\r\n        //   }\r\n        // })\r\n        // if(index !== '') {\r\n        //   this.users.splice(index, 1)\r\n        //   index = ''\r\n        // }\r\n\r\n      }\r\n      // console.log(this.users)\r\n      // console.log(this.vets)\r\n      // for (let user of this.users) {\r\n      //   for ( let vet of this.vets) {\r\n      //     if(user === vet) {\r\n      //       this.users.$remove(user)\r\n      //     }\r\n      //   }\r\n      // }\r\n    },\r\n    send() {\r\n      this.text = editor.getHtml()\r\n      if (!this.chatUser) {\r\n        this.$message({type: 'warning', message: \"请选择聊天对象\"})\r\n        return;\r\n      }\r\n      if (!this.text) {\r\n        this.$message({type: 'warning', message: \"请输入内容\"})\r\n      } else {\r\n        if (typeof (WebSocket) == \"undefined\") {\r\n          console.log(\"您的浏览器不支持WebSocket\");\r\n        } else {\r\n          console.log(\"您的浏览器支持WebSocket\");\r\n          // 组装待发送的消息 json\r\n          // {\"from\": \"zhang\", \"to\": \"admin\", \"text\": \"聊天文本\"}\r\n          let message = {from: this.vet.nickName, to: this.chatUser, text: this.text}\r\n          socket.send(JSON.stringify(message));  // 将组装好的json发送给服务端，由服务端进行转发\r\n          this.messages.push({user: this.vet.nickName, text: this.text})\r\n          // 构建消息内容，本人消息\r\n          this.createContent(null, this.vet.nickName, this.text)\r\n          this.text = '';\r\n        }\r\n      }\r\n    },\r\n    createContent(remoteUser, nowUser, text) {  // 这个方法是用来将 json的聊天消息数据转换成 html的。\r\n      let html\r\n      // 当前用户消息\r\n      if (nowUser) { // nowUser 表示是否显示当前用户发送的聊天消息，绿色气泡\r\n        html = \"<div class=\\\"el-row\\\" style=\\\"padding: 5px 0\\\">\\n\" +\r\n            \"  <div class=\\\"el-col el-col-22\\\" style=\\\"text-align: right; padding-right: 10px\\\">\\n\" +\r\n            \"    <div class=\\\"tip left\\\">\" + text + \"</div>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"  <div class=\\\"el-col el-col-2\\\">\\n\" +\r\n            \"  <span class=\\\"el-avatar el-avatar--circle\\\" style=\\\"height: 40px; width: 40px; line-height: 40px;\\\">\\n\" +\r\n            \"    <img src=\\\"https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png\\\" style=\\\"object-fit: cover;\\\">\\n\" +\r\n            \"  </span>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"</div>\";\r\n      } else if (remoteUser) {   // remoteUser表示远程用户聊天消息，蓝色的气泡\r\n        html = \"<div class=\\\"el-row\\\" style=\\\"padding: 5px 0\\\">\\n\" +\r\n            \"  <div class=\\\"el-col el-col-2\\\" style=\\\"text-align: right\\\">\\n\" +\r\n            \"  <span class=\\\"el-avatar el-avatar--circle\\\" style=\\\"height: 40px; width: 40px; line-height: 40px;\\\">\\n\" +\r\n            \"    <img src=\\\"https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png\\\" style=\\\"object-fit: cover;\\\">\\n\" +\r\n            \"  </span>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"  <div class=\\\"el-col el-col-22\\\" style=\\\"text-align: left; padding-left: 10px\\\">\\n\" +\r\n            \"    <div class=\\\"tip right\\\">\" + text + \"</div>\\n\" +\r\n            \"  </div>\\n\" +\r\n            \"</div>\";\r\n      }\r\n      console.log(html)\r\n      this.content += html;\r\n    },\r\n    init() {\r\n      // if(!sessionStorage.getItem(\"user\")) {\r\n      //   this.user.username = this.getProjectNum() + Math.floor(Math.random() * 10000)  // 如果是6位或者8位随机数，相应的 *1000000或者 *100000000就行了\r\n      // } else {\r\n      //   this.user = JSON.parse(sessionStorage.getItem(\"user\"))\r\n      // }\r\n      this.vet = JSON.parse(sessionStorage.getItem(\"user\")).vet\r\n      let username = this.vet.nickName;\r\n      let _this = this;\r\n      if (typeof (WebSocket) == \"undefined\") {\r\n        console.log(\"您的浏览器不支持WebSocket\");\r\n      } else {\r\n        console.log(\"您的浏览器支持WebSocket\");\r\n        let socketUrl = \"ws://localhost:9090/imserver/\" + username;\r\n        if (socket != null) {\r\n          socket.close();\r\n          socket = null;\r\n        }\r\n        // 开启一个websocket服务\r\n        socket = new WebSocket(socketUrl);\r\n        //打开事件\r\n        socket.onopen = function () {\r\n          console.log(\"websocket已打开\");\r\n        };\r\n        //  浏览器端收消息，获得从服务端发送过来的文本消息\r\n        socket.onmessage = function (msg) {\r\n          console.log(\"收到数据====\" + msg.data)\r\n          let data = JSON.parse(msg.data)  // 对收到的json数据进行解析， 类似这样的： {\"users\": [{\"username\": \"zhang\"},{ \"username\": \"admin\"}]}\r\n          if (data.users) {  // 获取在线人员信息\r\n            _this.users = data.users.filter(user => user.username !== username)  // 获取当前连接的所有用户信息，并且排除自身，自己不会出现在自己的聊天列表里\r\n          } else {\r\n            // 如果服务器端发送过来的json数据 不包含 users 这个key，那么发送过来的就是聊天文本json数据\r\n            //  // {\"from\": \"zhang\", \"text\": \"hello\"}\r\n            if (data.from === _this.chatUser) {\r\n              _this.messages.push(data)\r\n              // 构建消息内容\r\n              _this.createContent(data.from, null, data.text)\r\n            }\r\n          }\r\n        };\r\n        //关闭事件\r\n        socket.onclose = function () {\r\n          console.log(\"websocket已关闭\");\r\n        };\r\n        //发生了错误事件\r\n        socket.onerror = function () {\r\n          console.log(\"websocket发生了错误\");\r\n        }\r\n      }\r\n    },\r\n    getProjectNum () {\r\n      const projectTime = new Date() // 当前中国标准时间\r\n      const Year = projectTime.getFullYear() // 获取当前年份 支持IE和火狐浏览器.\r\n      const Month = projectTime.getMonth() + 1 // 获取中国区月份\r\n      const Day = projectTime.getDate() // 获取几号\r\n      let CurrentDate = String(Year)\r\n      if (Month >= 10) { // 判断月份和几号是否大于10或者小于10\r\n        CurrentDate += Month\r\n      } else {\r\n        CurrentDate += '0' + Month\r\n      }\r\n      if (Day >= 10) {\r\n        CurrentDate += Day\r\n      } else {\r\n        CurrentDate += '0' + Day\r\n      }\r\n      return CurrentDate\r\n    },\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n.tip {\r\n  color: white;\r\n  text-align: center;\r\n  border-radius: 10px;\r\n  font-family: sans-serif;\r\n  padding: 10px;\r\n  width:auto;\r\n  display:inline-block !important;\r\n  display:inline;\r\n}\r\n\r\n.right {\r\n  background-color: deepskyblue;\r\n}\r\n.left {\r\n  background-color: forestgreen;\r\n}\r\n</style>\r\n","import { render } from \"./Im.vue?vue&type=template&id=757026ef\"\nimport script from \"./Im.vue?vue&type=script&lang=js\"\nexport * from \"./Im.vue?vue&type=script&lang=js\"\n\nimport \"./Im.vue?vue&type=style&index=0&id=757026ef&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\竹诺\\\\Desktop\\\\springboot+vue框架\\\\stray-animal-rescue-system\\\\vue\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["style","_createElementVNode","id","_createElementBlock","_createVNode","_component_el_row","_component_el_col","span","offset","_component_el_card","_hoisted_2","_Fragment","_renderList","$data","user","key","username","_toDisplayString","_component_el_icon","class","onClick","_component_chat_dot_round","innerHTML","_hoisted_7","_component_el_button","type","size","$options","toolbar","socket","editor","name","data","circleUrl","vet","isCollapse","users","chatUser","text","messages","content","vets","editorConfig","placeholder","MENU_CONF","uploadImage","server","fieldName","base64LimitSize","created","this","init","getVets","mounted","createEditor","selector","config","mode","createToolbar","beforeUnmount","destroy","methods","request","then","res","filter","nickName","send","getHtml","WebSocket","console","log","message","from","to","JSON","stringify","push","createContent","$message","remoteUser","nowUser","html","parse","sessionStorage","getItem","_this","socketUrl","close","onopen","onmessage","msg","onclose","onerror","getProjectNum","projectTime","Date","Year","getFullYear","Month","getMonth","Day","getDate","CurrentDate","String","__exports__","render"],"sourceRoot":""}